#！ /usr/bin/env perl

use Cwd;
use File::Basename;

$ctl_path = dirname($0)."/CTL";
if($ARGV[0] =~ /(\w+)\.csv/) {
  $csv = $ARGV[0] ;
  $ctl_name =$1;
}
else{
  $csv = $ARGV[0].".csv";
  $ctl_name = $ARGV[0];
}

if(! -e $csv) {
  if($ARGV[1] =~ /pkt_rdy|pkt_hs|p_rdy|p_hs/){
  system("cp $ctl_path/test_csv/p_hs_test.csv $csv");
  system("$ctl_path/../replace_keywords p_hs $ctl_name -f $csv"); 
  }
  elsif($ARGV[1] =~ /pkt_bp|p_bp/) {
  system("cp $ctl_path/test_csv/p_bp_test.csv $csv");
  system("$ctl_path/../replace_keywords p_bp $ctl_name -f $csv"); 
  }
  elsif($ARGV[1] =~ /cyc_rdy|cyc_hs|c_rdy|c_hs/) {
    system("cp $ctl_path/test_csv/c_hs_test.csv $csv");|
    system("$ctl_path/../replace_keywords c_hs $ctl_name -f $csv"); }
  else{
    system("cp $ctl_path/test_csv/c_bp_test.csv $csv");
    system("$ctl_path/../replace_keywords c_bp $ctl_name -f $csv"); 
  }
  system("gvim $csv");
  print "[genTB]: Do you finish $csv\n";
  print “[genTB]: [y|Y] --> Create ctl_utils with $csv.\n";
  print “[genTB]: [n|N] --> Exit.\n";
  print "[genTB]: Please input:";
  chomp($choice = <STDIN>);
  if($choice !~ /y|Y/) {
    exit;
  }
}

$genctl = $ctl_path."/ctl_main.py";
$output =".";
if(getcwd() =~ /_utils/) {
  $output ="..";
}
system("$genctl -f $csv -o $output");
